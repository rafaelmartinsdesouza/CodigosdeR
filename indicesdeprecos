######
#Este código obtém os dados de inflação de inflação (IPCA e IGPM) no Sistema de Recupeção Automática 
#(SIDRA) do IBGE e do Sistema de Séries Temporais do Séries Temporais do Banco Central para construir séries
#de variações de índices de preços e de índices de preços.

# Os gráficos são feitos em plotly

### Pacotes usados
if(!require(plotly)){install.packages("plotly")}
require(plotly)

if(!require(timetk)){install.packages("timetk")}
require(timetk)

if(!require(sidrar)){install.packages("sidrar")}
require(sidrar)

if (!require("rbcb")) install.packages("rbcb")
library(rbcb)

### Função de apoio
#Transforma variação mensal em um índice cuja base é igual a 100
varparaindice = function(variacao){
  indice = variacao
  indice[1] = 100
  n = length(variacao)
  for (i in 2:n){
    indice[i] = indice[i-1]*(1+variacao[i]/100)
  }
  return(indice)
}

# IPCA GERAL
# Obter os dados do IPCA GERAL (variação mensal) - Tabela 1737 do SIDRA
# A tabela 1737 contém o IPCA mensal por grupos e subitens desde 1979
IPCAGeral <- sidrar::get_sidra(
  api = "/t/1737/n1/all/v/63/p/all/d/v63%202" # v63 é a variação mensal
)

# Filtrar os dados para o índice geral (nível "Brasil" e "Índice geral")
IPCAGeral <- IPCAGeral %>%
  filter(`Nível Territorial` == "Brasil",
         `Variável` == "IPCA - Variação mensal") %>%
  mutate(Data = as.Date(paste0(`Mês (Código)`, "01"), format = "%Y%m%d")) %>%
  select(Data, Valor) %>%
  filter(Data >= as.Date("1995-12-01"))

IPCAGeral = ts(IPCAGeral[,2], start = c(1995, 12), frequency = 12)
IPCAGeralI = varparaindice(IPCAGeral)
head(IPCAGeralI)
tail(IPCAGeralI)

head(IPCAGeral)
tail(IPCAGeral)

#IGPM
# Obter a série do IGP-M (variação mensal) - Código 189 no SGS do Banco Central
IGPM <- get_series(code = 189, start_date = "1995-12-01", as = "ts")

#importante controlar a data
IGPM = window(IGPM, start = c(1995,12))
IGPMI = varparaindice(IGPM)

#### Criação do Conjunto de Índices
(n.ipca = length(IPCAGeralI))
(n.igpm = length(IGPMI))

if (n.igpm > n.ipca) {IGPMI = IGPMI[1:n.igpm-1]}

seriesprecos = data.frame(cbind(IPCAGeralI,
                                   IGPMI))
indice = tk_index(IPCAGeralI, timetk_idx = FALSE, silent = FALSE)
seriesprecos$indice = indice
head(seriesprecos)

names(seriesprecos) = c("IPCAGeral", "IGPM", "Data")
head(seriesprecos)

#Salvando as variações em arquivo CSV com valores separados por ponto e vírgula 
write.csv2(seriesprecos, "seriesvariacoes.csv")

####################################################################
####################################################################
####################################################################
#### Criação do Conjunto de Variação
seriesvariacoes = data.frame(cbind(IPCAGeral,
                                      IGPM))
indice = tk_index(IPCAGeral, timetk_idx = FALSE, silent = FALSE)
seriesvariacoes$indice = indice

names(seriesvariacoes) = c("IPCAGeral", "IGPM", "Data")
head(seriesvariacoes)

#Salvando as variações em arquivo CSV com valores separados por ponto e vírgula 
write.csv2(seriesvariacoes, "seriesvariacoes.csv")
####################################################################
####################################################################
####################################################################

##### Confecção do gráfico com o plotly
fig <- plot_ly(x = ~Data, 
               y = ~IPCAGeral, mode = 'lines', type = 'scatter',
               data = seriesprecos, name = "IPCA Geral")
fig <- fig %>% add_trace(y = ~IGPMI, name = 'IGP-M', mode = 'lines') 
x <- list(
  title = ""
)
y <- list(
  title = "Índices"
)
fig <- fig %>% layout(xaxis = x, yaxis = y)
fig <- fig %>% layout(legend = list(orientation = 'h'))
fig

##### Confecção do gráfico com o plotly
fig1 <- plot_ly(x = ~indice, 
               y = ~IPCAGeral, mode = 'lines', type = 'scatter',
               data = seriesvariacoes, name = "IPCA Geral")
fig1 <- fig1 %>% add_trace(y = ~IGPM, name = 'IGP-M', mode = 'lines') 
x <- list(
  title = ""
)
y <- list(
  title = "Índices"
)
fig1 <- fig1 %>% layout(xaxis = x, yaxis = y)
fig1 <- fig1 %>% layout(legend = list(orientation = 'h'))
fig1
